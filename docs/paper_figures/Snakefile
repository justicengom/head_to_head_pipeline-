"""Note: the figure numbers used here are based on the preprint stage
https://doi.org/10.1101/2022.03.04.22271870
"""
from pathlib import Path

import pandas as pd

inclusion_expr = "failed_qc == 0 and excluded == 0"
samplesheet = pd.read_csv("../samples.paper.csv").query(inclusion_expr)
TECHS = ["illumina", "nanopore"]
DST_RESULTS = Path("../../analysis/resistance_prediction/results")
VARIANT_RESULTS = Path("../../analysis/baseline_variants/")
PHENOTYPES = Path("../phenotypes.csv")
FIGURES = Path("figures")
FIGURE_EXTS = [".png", ".svg"]
LOGDIR = Path("logs/rules")
ENVSDIR = Path("envs")
SCRIPTSDIR = Path("scripts")
ILLUMINA_DIST_THRESHOLDS = (5, 12)
NANOPORE_DIST_THRESHOLDS = (6, 12)
DPI = 300

dst_concordance_files = set()
for site, sample in zip(samplesheet["site"], samplesheet["sample"]):
    for tech in TECHS:
        dst_concordance_files.add(
            str(DST_RESULTS / f"concordance/mykrobe/{tech}/{site}/{sample}.mykrobe.csv")
        )

required_files = set()

for ext in FIGURE_EXTS:
    required_files.add(FIGURES / f"figure_1{ext}")
    required_files.add(FIGURES / f"figure_3{ext}")
    required_files.add(FIGURES / f"figure_4{ext}")


rule all:
    input:
        required_files,


rule figure_1:
    """Phenotype availability"""
    input:
        phenosheet=PHENOTYPES,
        concordance=dst_concordance_files,
    output:
        multiext(str(FIGURES / "figure_1"), *FIGURE_EXTS),
    log:
        LOGDIR / "figure_1.log",
    conda:
        str(ENVSDIR / "figure_1.yaml")
    params:
        style="ggplot",
        figsize=(10, 10),
        dpi=DPI,
        xticks=[],
        exclude=("pyrazinamide", "moxifloxacin"),
    script:
        str(SCRIPTSDIR / "figure_1.py")


rule figure_3:
    """Close dotplot"""
    input:
        compass_matrix=VARIANT_RESULTS / "distance/compass.matrix.csv",
        bcftools_matrix=VARIANT_RESULTS / "distance/bcftools.matrix.csv",
    output:
        multiext(str(FIGURES / "figure_3"), *FIGURE_EXTS),
    log:
        LOGDIR / "figure_3.log",
    conda:
        str(ENVSDIR / "figure_3.yaml")
    params:
        style="ggplot",
        figsize=(10, 10),
        dpi=DPI,
        marker_size=75,
        illumina_thresholds=ILLUMINA_DIST_THRESHOLDS,
        nanopore_thresholds=NANOPORE_DIST_THRESHOLDS,
        close_threshold=20,
        xaxis_label="COMPASS SNP distance",
        yaxis_label="BCFtools SNP distance",
        false_marker="s",
        font_size=14,
    script:
        str(SCRIPTSDIR / "figure_3.py")

rule figure_4:
    """Transmission clusters"""
    input:
        compass_matrix=VARIANT_RESULTS / "distance/compass.matrix.csv",
        bcftools_matrix=VARIANT_RESULTS / "distance/bcftools.matrix.csv",
    output:
        multiext(str(FIGURES / "figure_4"), *FIGURE_EXTS),
    log:
        LOGDIR / "figure_4.log",
    conda:
        str(ENVSDIR / "figure_4.yaml")
    params:
        style="default",
        figsize=(10, 10),
        dpi=DPI,
        illumina_thresholds=ILLUMINA_DIST_THRESHOLDS,
        nanopore_thresholds=NANOPORE_DIST_THRESHOLDS,
    script:
        str(SCRIPTSDIR / "figure_4.py")
